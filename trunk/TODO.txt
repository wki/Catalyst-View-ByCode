Changes C::V::ByCode

0) Template file
    - sub template(&);
    - template { ... code ... };
      # equivalent to:
      sub RUN { ... }


1) new way defining tags
    - sub &C::V::B::Renderer::tag();
    - tag 'sub_name', 'real_tag_name';
      add 'sub_name' to @EXPORT, $EXPORT_TAGS{default}
    - creates:
      sub sub_name(;&@) {
          my $code = $_[0];
          my $attr = ref($_[1]) eq 'HASH' ? $_[1] : {};
          
          # open tag 'real_tag_name' / $attr
          $markup->add_content($code->($attr)) if ($code);
          # close tag
      }
    
    - Devel::Declare way of calling:
      div id.class(attr_name => attr_value, ...) { ... content ...};


2) defining blocks
    - sub block($&) {
          my $name = shift;
          my $code = shift;
          *{"$package\::$name"} = sub(;&@) {
              local $block_code = $_[0];
              local $block_attr = ref($_[1]) eq 'HASH' ? $_[1] : {};
              
              # open unnamed tag / $block_attr
              $markup->add_content($code->($block_attr));
              # close unnamed tag
          };
          ### add $name to @EXPORT
      }
      sub content {
          my %attr = (%{$block_attr}, @_);
          $block_code->(\%attr) if ($block_code);
      }
      
    - native way of defining a block:
      block block_name => sub { ... ; content(...); ... };
      
    - Devel::Declare'd way of defining a block:
      block block_name { ... };
      
    - native way of calling a block:
      block_name { ... content ... } { ... };
      
    - Devel::Declare'd way of calling a block:
      block_name id.class(attr_name => attr_value, ...) { ... content ...};


3) extensions to known sub's
    - getters: attr('xxx')       id()        class()
    - setters: attr('xxx', 42)   id('bla')   class('foo')


4) example:

block draw_nav {
    my $attr = shift;
    return if (!$attr->{navigation});
    
    ul {
        class $attr->{id};
        foreach my $nav (@{$attr->{navigation}}) {
            li {
                a(href => nav_uri($nav->parent
                                ? stash->{selected_navigation}->url_part 
                                : (), 
                                $nav->url_part)) {
                    class 'selected'
                        if ($attr->{selected} && $nav->id == $attr->{selected}->id);
                    $nav->name_de;
                };
            };
        }
    };
}

block infobox {
    my $attr = shift;
    
    div.infobox {
        id $attr->{id} if (exists($attr->{id}));
        div.infobox_head { $attr->{headline} || 'untitled' };
        div.infobox_content {
            content;
        };
    };
}

template {
   doctype 'xhtml';
   html {
       head {
           title {stash->{title} || 'Wittmann Ohne Titel'};
           load Js  => 'site.js';
           load Css => 'site.css';
       };
       body {
           div header.class1.class2 {
               a(href => c->uri_for_action('/home')) {
                   img.logo(src => '/static/images/logo.png');
               };
               
               draw_nav topnav(navigation => ..., selected => ...);
           };
           
           div content {
               yield;
               
               infobox leftbox(headline => 'just an info') { ... some content ... };
           };
           
           div footer {
               # something
               
               
           };
       };
   };
}




