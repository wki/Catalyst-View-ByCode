Changes C::V::ByCode

++ Tag.pm -- attr isa HashRef (!) -- no constraint here!


0) Template file  +++ DONE!
    - sub template(&);
    - template { ... code ... };
      # equivalent to:
      sub RUN { ... }


1) new way defining tags -- DO WE NEED THIS?
    - sub &C::V::B::Renderer::tag();
    - tag 'sub_name', 'real_tag_name';
      add 'sub_name' to @EXPORT, $EXPORT_TAGS{default}
    - creates:
      sub sub_name(;&@) {
          my $code = $_[0];
          my $attr = ref($_[1]) eq 'HASH' ? $_[1] : {};
          
          # open tag 'real_tag_name' / $attr
          $markup->add_content($code->($attr)) if ($code);
          # close tag
      }
    
    - Devel::Declare way of calling:
      div id.class(attr_name => attr_value, ...) { ... content ...};


2) defining blocks  +++ PARTLY DONE
    --> still TODO:
        - find a clever way to transport attr() info into block
          instead of into tag containing the block_content
        - if a block is defined in a use()d package,
          find a way to mark a block-sub for creation of a tag_parser
    --> block_name id.class(...) { ... };
        ==> block_name { ... } ...;
        (definition :: sub block_name(&;%) {...} -- second++ param maybe hash)
    --> CAVEAT: attr() definitions inside block {} will not work as expected

    - native way of defining a block:
      block block_name => sub { ... ; block_content(...); ... };
      
    - Devel::Declare'd way of defining a block:
      block block_name { ... };
      
    - native way of calling a block:
      block_name { ... block_content ... } { ... };
      
    - Devel::Declare'd way of calling a block:
      block_name id.class(attr_name => attr_value, ...) { ... block_content ...};


3) extensions to known sub's
    - getters: attr('xxx')       id()        class()
    - setters: attr('xxx', 42)   id('bla')   class('foo')


4) example:

block draw_nav {
    my $navigation = attr('navigation');
    my $selected = attr('selected');
    return if (!$navigation);
    
    ul {
        class $attr->{id};
        foreach my $nav (@{$navigation}) {
            li {
                a(href => nav_uri($nav->parent
                                ? stash->{selected_navigation}->url_part 
                                : (), 
                                $nav->url_part)) {
                    class 'selected'
                        if ($selected && $nav->id == $selected->id);
                    $nav->name_de;
                };
            };
        }
    };
}

block infobox {
    my $id = attr('id');
    my $headline = attr('headline') || 'untitled';
    
    div.infobox {
        id $id if ($id);
        div.infobox_head { $headline };
        div.infobox_content {
            block_content;
        };
    };
}

template {
   doctype 'xhtml';
   html {
       head {
           title {stash->{title} || 'Wittmann Ohne Titel'};
           load Js  => 'site.js';
           load Css => 'site.css';
       };
       body {
           div header.class1.class2 {
               a(href => c->uri_for_action('/home')) {
                   img.logo(src => '/static/images/logo.png');
               };
               
               draw_nav topnav(navigation => ..., selected => ...);
           };
           
           div content {
               yield;
               
               infobox leftbox(headline => 'just an info') { ... some content ... };
           };
           
           div footer {
               # something
               
               
           };
       };
   };
}




